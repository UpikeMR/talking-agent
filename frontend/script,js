document.addEventListener('DOMContentLoaded', () => {
    const speakButton = document.getElementById('speakButton');
    const audioElement = document.getElementById('responseAudio');

    if (!speakButton || !audioElement) {
        console.error('Elements not found: speakButton or responseAudio');
        return;
    }

    speakButton.addEventListener('click', async () => {
        console.log('Speak Now button clicked');
        try {
            console.log('Requesting microphone access...');
            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
            console.log('Microphone access granted');

            const mediaRecorder = new MediaRecorder(stream);
            const chunks = [];

            mediaRecorder.start();
            console.log('Recording started');
            speakButton.textContent = 'Recording...';

            mediaRecorder.ondataavailable = (e) => {
                chunks.push(e.data);
                console.log('Audio chunk recorded:', e.data);
            };

            mediaRecorder.onstop = async () => {
                console.log('Recording stopped');
                speakButton.textContent = 'Speak Now';
                const blob = new Blob(chunks, { type: 'audio/wav' });
                console.log('Audio blob created:', blob);

                const formData = new FormData();
                formData.append('audio', blob, 'recording.wav');
                console.log('Sending audio to back-end...');

                const response = await fetch('https://talking-agent-backend.onrender.com/conversation', {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error(`Server responded with ${response.status}: ${await response.text()}`);
                }

                console.log('Response received from back-end');
                const audioBlob = await response.blob();
                const audioUrl = URL.createObjectURL(audioBlob);
                audioElement.src = audioUrl;
                audioElement.play();
                console.log('Playing response audio');
            };

            // Stop recording after 5 seconds
            setTimeout(() => {
                mediaRecorder.stop();
            }, 5000);
        } catch (error) {
            console.error('Error:', error);
            speakButton.textContent = 'Speak Now';
            alert('Error: ' + error.message);
        }
    });
});